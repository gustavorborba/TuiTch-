<link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />

<textarea class="publicar" id="textoPublicacao" maxlength="288" name="comment" placeholder="Fala Tchê!?"></textarea>

<input id="btnPublicar" class="btn-default btn" type="button" value="Publicar" />


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.textcomplete.min.js"></script>
<script>
        var text;
        var textoTag;
        var textoUsuario;
        var tags = [];
        var usuarios = [];
        var matchesTags;
        var matchesUsers;
        var dataObject;
        var mentions = [];
        var tagsTextComplete = [];
        var cache = false;

        $.get('Publicacao/HashtagAutocomplete', function (data) {
            dataObject = data;
            tagsTextComplete = $.map(dataObject, function (el) { return el.label });
        });
        $.get( "Publicacao/UsuarioAutocomplete", function( data ) {
            dataObject = (data);
            mentions = $.map(dataObject, function (el) { return el.label });
        });

        $('textarea').textcomplete([
            { // mention strategy
                match: /(^|\s)#(\w*)$/,
                search: function (term, callback) {
                    callback($.map(tagsTextComplete, function (mention) {
                        return mention.indexOf(term) === 0 ? mention : null;
                    }))
                },
                replace: function (value) {
                    return '$1#' + value + ' ';
                },
                cache: true
            }], { maxCount: 10, debounce: 500 });

        $('textarea').textcomplete([
                { // mention strategy
                    match: /(^|\s)@@(\w*)$/,
                    search: function (term, callback) {
                        callback($.map(mentions, function (mention) {
                            return mention.indexOf(term) === 0 ? mention : null;
                        }))
                    },
                    replace: function (value) {
                        return '$1@@' + value + ' ';
                    },
                    cache: true
                }], { maxCount: 10, debounce: 500 });

        var textarea = document.querySelector('textarea');
        textarea.addEventListener('keyup', function () {
            text = this.value;
            matchesTags = text.match(/([#][^\s]+)/g);
            matchesUsers = text.match(/([@@][^\s]+)/g);
            if (matchesTags) matchesTags.forEach(function (match) {
                textoTag = match.slice(1);
            })
            if (matchesUsers) matchesUsers.forEach(function (match) {
                textoUsuario = match.slice(1);
                console.log(textoUsuario);
            });

        });
        $("#btnPublicar").click(function () {
            if (matchesTags != null) {
                matchesTags.forEach(function (value) {
                    tags.push(value.slice(1));
                });
            }
            if (matchesUsers != null) {
                matchesUsers.forEach(function (value) {
                    usuarios.push(value.slice(1));
                });
            }
            var dataObject = JSON.stringify({
                'hashtags': removeDuplicates(tags),
                'users': textoUsuario,
                'conteudo': text
            });
            ($('textarea').val(''))
            $.ajax({
                url: '/Publicacao/Publicar',
                type: 'POST',
                contentType: 'application/json',
                data: dataObject
            }).done(function () {
                matchesTags = [];
                matchesUsers = [];
                tags = [];
                usuarios = [];
                (function notifyMe() {
                    if (!("Notification" in window)) {
                        alert("This browser does not support desktop notification");
                    }

                    else if (Notification.permission === "granted") {
                        var notification = new Notification("Publicação postada!");
                    }

                    else if (Notification.permission !== 'denied') {
                        Notification.requestPermission(function (permission) {

                            if (!('permission' in Notification)) {
                                Notification.permission = permission;
                            }
                            if (permission === "granted") {
                                var notification = new Notification("Publicação postada!");
                            }
                        });
                    }
                }
            )()
            });
           
        });

        function removeDuplicates(values){
            var uniqueNames = [];
            $.each(values, function (i, el) {
                if ($.inArray(el, uniqueNames) === -1) uniqueNames.push(el);
            });
            return uniqueNames;
        }
</script>